---
# Creates group for SFTP users.
- name: SFTP-Server | Create sftp user group
  group: name={{ sftp_group_name }}
         state=present

# Necessary for chrooting of SFTP users.
- name: SFTP-Server | Alter sftp subsystem entry
  lineinfile: dest=/etc/ssh/sshd_config
              regexp="^Subsystem(\s+)sftp"
              line="Subsystem sftp internal-sftp -f AUTH -l VERBOSE"
              state=present
  notify: SFTP-Server | Restart sshd

# Some sed magic to grab the entire sshd_config, excluding our custom config block.
- name: SFTP-Server | Get sshd_config content
  shell: sed -n '/# Begin SFTP-Server block/,/# End SFTP-Server block/! { p }' /etc/ssh/sshd_config
  register: sftp_sshd_config_content
  changed_when: True == False

# Create/recreate ssh_config.
- name: SFTP-Server | Apply sshd_config template
  template: src=sshd_config.j2
            dest=/etc/ssh/sshd_config
            owner=root
  notify: SFTP-Server | Restart sshd

# Create each SFTP user with home directory on the correct patition, and add to SFTP group.
- name: SFTP-Server | Create sftp users
  user: name={{ item.name }}
        groups={{ sftp_group_name }}
        home="{{ sftp_home_partition }}/{{ item.name }}"
        state=present
        createhome=no
  with_items: "{{ sftp_users }}"

# A working chrooted SFTP setup requires root:sftgroup ownership of a user's home directory.
- name: SFTP-Server | Correct ownership and permission of home directories
  file: path="{{ sftp_home_partition }}/{{ item.name }}"
        owner=root
        group={{ sftp_group_name }}
        mode="0750"
        state=directory

  with_items: "{{ sftp_users }}"

# Install all relevant public keys.
- name: SFTP-Server | Install public keys
  authorized_key: user={{ item.0.name }}
                  key='{{ lookup('file', item.1) }}'
                  manage_dir=no
                  path='/etc/ssh/authorized_keys/{{ item.0.name }}'
  with_subelements:
    - "{{ sftp_users }}"
    - authorized

# Update user passwords, if they were specified.
- name: SFTP-Server | Update user passwords
  user: name={{ item.name }}
        password={{ item.password }}
  with_items: "{{ sftp_users }}"
  when: item.password is defined

# Create common directories for SFTP users. Optional, but recommended.
- name: SFTP-Server | Create directories
  file: path="{{ sftp_home_partition }}/{{ item[0].name }}/{{ item[1].name | default(item[1]) }}"
        owner={{ item[0].name }}
        group={{ item[0].name }}
        mode="{{ item[1].mode | default(0750) }}"
        state=directory
  with_nested:
    - "{{ sftp_users }}"
    - "{{ sftp_directories }}"

############################################
# Mount directories from other accounts
# Assume that the other account already exists
# Assume that the dest directory defined in sftp_directories
- name: SFTP-Server | Mount other directories
  mount:  name="{{ sftp_home_partition }}/{{ item[0].name }}/{{ item[1].dest }}"
          src="{{ sftp_home_partition }}/{{ item[1].src }}"
          opts=bind
          fstype=none
          state=present
  register: fstab
  with_nested:
    - "{{ sftp_users }}"
    - "{{ mount_directories | default({}) }}"
  when: mount_directories is defined

- name: Reload fstab
  command: mount -a
  when: mount_directories is defined
#  when: fstab.changed
